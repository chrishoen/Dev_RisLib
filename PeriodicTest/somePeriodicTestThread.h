#pragma once

/*==============================================================================
Timer test thread.
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "risThreadsPeriodicThread.h"

namespace Some
{
//******************************************************************************
//******************************************************************************
//******************************************************************************

class PeriodicTestThread : public Ris::Threads::BasePeriodicThread
{
public:
   typedef Ris::Threads::BasePeriodicThread BaseClass;

   //******************************************************************************
   //******************************************************************************
   //******************************************************************************
   // Members.

   //******************************************************************************
   //******************************************************************************
   //******************************************************************************
   // Members.

   //******************************************************************************
   //******************************************************************************
   //******************************************************************************
   // Methods.

   // Constructor.
   PeriodicTestThread();

   // Base class overloads.
   void executeOnTimer(int aTimeCount) override;
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Global instance

#ifdef _SOMEPERIODICTESTTHREAD1_CPP_
          PeriodicTestThread* gPeriodicTestThread = 0;
#else
   extern PeriodicTestThread* gPeriodicTestThread;
#endif

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace


