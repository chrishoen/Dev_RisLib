#pragma once

/*==============================================================================
Timer test thread.
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "risThreadsRandomThread.h"

namespace Some
{
//******************************************************************************
//******************************************************************************
//******************************************************************************

class TimerTestThread1 : public Ris::Threads::BaseRandomThread
{
public:
   typedef Ris::Threads::BaseRandomThread BaseClass;

   //******************************************************************************
   //******************************************************************************
   //******************************************************************************
   // Members.

   //******************************************************************************
   //******************************************************************************
   //******************************************************************************
   // Methods.

   // Constructor.
   TimerTestThread1();

   // Base class overloads.
   void executeOnTimer(int aTimeCount) override;
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Global instance

#ifdef _SOMETIMERTESTTHREAD1_CPP_
          TimerTestThread1* gTimerTestThread1 = 0;
#else
   extern TimerTestThread1* gTimerTestThread1;
#endif

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace


