/*==============================================================================
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "stdafx.h"

#include "risAbortableSleep.h"

namespace Ris
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Constructor.

AbortableSleep::AbortableSleep()
{
   mAbortFlag = false;
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Set the abort flag false and wait for the semaphore to timeout.

void AbortableSleep::doSleep(int aTimeout)
{
   // Reset the abort flag.
   mAbortFlag = false;

   // Wait for the event.
   mSem.get(aTimeout);
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Set the abort flag true and signal the event semaphore. This will
// abort  the above sleep.

void AbortableSleep::doAbort()
{
   // Set the abort flag.
   mAbortFlag = true;

   // Signal the event.
   mSem.put();
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace

