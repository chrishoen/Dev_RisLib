#pragma once

/*==============================================================================
Bit utilities.
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include <stdlib.h>

//******************************************************************************
//******************************************************************************
//******************************************************************************

namespace Ris
{

//******************************************************************************
//******************************************************************************
//******************************************************************************

// Set bit.
template <typename T> void setBit(T* aValue, int aBitNum, bool aBitValue)
{
   if (aBitValue)
   {
      *aValue |= (1 << aBitNum);
   }
   else
   {
      *aValue &= ~(1 << aBitNum);
   }
}

// Set bit.
template <typename T> T setBit(T aValue, int aBitNum, bool aBitValue)
{
   T tTemp = 0;
   if (aBitValue)
   {
      tTemp = aValue | (1 << aBitNum);
   }
   else
   {
      tTemp = aValue & ~(1 << aBitNum);
   }
   return tTemp;
}

// Get bit.
template <typename T> bool getBit(T aValue, int aBitNum)
{
   return aValue & (1 << aBitNum);
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace

