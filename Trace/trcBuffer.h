#pragma once

/*==============================================================================
Trace buffer. 
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

//******************************************************************************
//******************************************************************************
//******************************************************************************

namespace Trc
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
// This is a class that contains sna trace buffer.
// 

class Buffer
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Constants.

   static const int cMaxStringSize = 99;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   // Test mode 1,2.
   int  mTestMode;

   // Processor variables.
   int  mTestThreadProcessor;
   int  mTestThreadPriority;
   bool mPollProcessor;

   // Timer thread variables.
   int  mMonitorThreadPeriod;
   int  mStatPeriod;
   int  mPeriodUs;

   // Random thread variables.
   int  mIntervalMeanMs;
   int  mIntervalRandomUs;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Expanded members that are not read from the parms file.

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Infrastucture.

   // Constructor,
   Buffer();
   void reset();
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Global instance.

#ifdef _TRCBUFFER_CPP_
   Buffer gBuffer;
#else
   extern Buffer gBuffer;
#endif

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace