/*==============================================================================
Description:
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************
#include "stdafx.h"

#include "someTestThread.h"

#define  _SOMETIMERTHREAD_CPP_
#include "someTimerThread.h"

namespace Some
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Constructor.

TimerThread::TimerThread()
{
   // Set base class variables.
   BaseClass::setThreadName("Timer");
   BaseClass::setThreadPrintLevel(0);
   BaseClass::setThreadPriorityHigh();
   BaseClass::mTimerPeriod = 10;
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Execute periodically. This is called by the base class timer.

void TimerThread::executeOnTimer(int aTimeCount)
{
   if (aTimeCount % 100 == 0)
   {
      Prn::print(Prn::View11, "TimerThread::executeOnTimer %d", aTimeCount);
   }

   // Post to the waitable semaphore.
   gTestThread->mWaitable.postSemaphore();
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

}//namespace